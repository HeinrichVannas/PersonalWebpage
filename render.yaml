#################################################################
# Example render.yaml                                           #
# This file is configured for a Vue/React frontend, Spring Boot #
# backend, and PostgreSQL database deployment on Render.       #
#################################################################

# List all services *except* PostgreSQL databases here
services:
  # A web service for the Spring Boot backend
  - type: web
    runtime: docker
    name: spring-boot-backend
    repo: https://github.com/HeinrichVannas/PersonalWebpage # Replace with your backend repo URL
    numInstances: 1 # You can adjust the number of instances
    region: frankfurt # Choose the region closest to you
    plan: free # Choose your plan (starter is free)
    branch: master # Change this to your main branch
    dockerfilePath: ./backend/Dockerfile
    autoDeploy: true # Enable automatic deploys on push
    envVars: # Environment variables for your backend
      - key: DATABASE_URL
        fromDatabase: # Reference a property of a PostgreSQL database
          name: my-postgres-db
          property: connectionString
      - key: APP_SECRET
        generateValue: true # Generate a base64-encoded value for app secret

  # A web service for the Vue/React frontend
  - type: web
    runtime: static # Use static runtime for frontend
    name: heinrichvannas
    repo: https://github.com/HeinrichVannas/PersonalWebpage # Replace with your frontend repo URL
    buildCommand: cd frontend/vuefrontend && npm install && npm run build # Build command for your Vue/React app
    staticPublishPath: frontend/vuefrontend/dist # Adjust this if your build output is different (e.g., for React it might be ./build)
    previews:
      generation: automatic # Enable service previews
    autoDeploy: true # Enable automatic deploys on push
    envVars:
      - key: NODE_VERSION
        value: 21.7.1

# List all PostgreSQL databases here
databases:
  # A PostgreSQL database for the backend
  - name: my-postgres-db
    databaseName: mydb # Your database name
    user: myuser # Optional, you can specify a user
    plan: free # Choose a plan that fits your needs
    region: frankfurt
    ipAllowList: # Define IPs that can connect, or leave empty for default
      - source: 0.0.0.0/0 # Allows connections from anywhere (not recommended for production)
